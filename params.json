{"name":"Hexagonal TDD in Ruby - Screencast Series","tagline":"How to TDD a hexagonal application","body":"In this screencast series, we will demystify hexagonal architectures, showing a simple way to TDD a hexagonal application into existence. We will build pieces of Pivotal's \"Whiteboard\" Application (a web application that facilitates both the presentation and the sharing out of office-wide standup items). \r\n\r\nAll feedback greatly appreciated. Feel free to: \r\n* open an issue on this project's [github page](https://github.com/moonmaster9000/hexagonal_tdd_in_ruby/issues)\r\n* [tweet](https://twitter.com/moonmaster9000) at `@moonmaster9000` \r\n* email `hexagonal.tdd.in.ruby@gmail.com`\r\n\r\n### Episode 1\r\n\r\n<https://youtu.be/XEkR3hQvcIc>\r\n\r\nIn this episode, we TDD our first use case for the whiteboard application into existence. We discuss the difference between high level policy and low level detail, and we tease out those boundaries.\r\n\r\nWe hand roll a spy and a fake across two significant (and common) architectural boundaries – and we discuss when we use test doubles, and why. \r\n\r\nWe also create a contract for our fake repository, and tease out a message passing protocol between the use case and GUI. \r\n\r\n\r\n### Episode 2\r\n\r\n<https://youtu.be/54A0Yh7t8vo>\r\n\r\nIn this episode, we create a Rails application and plug it into our high level policy. We show how to use our fake in memory repository for now, deferring the decision for how to concretely persist entities a bit longer. We also make use of the humble object pattern, and we don't TDD _anything_. <~ o.O.\r\n\r\n\r\n### Episode 3 - The Last Responsible Moment\r\n\r\n<https://youtu.be/zui9wF37dRQ>\r\n\r\nIn this episode, we pretend that we've been asked to push our whiteboard rails application into production. The only problem is, we're still using the FakeWhiteboardRepo to persist our whiteboards! So we quickly spin up a real one. We TDD without writing tests! We use ActiveRecord outside of Rails! We create an *optional* engine. And more. Enjoy!\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}